{"version":3,"sources":["components/TasksList/TasksList.js","components/NewTask/NewTaskMenu.js","components/TaskComponents/ToDo/NewDoTask.js","components/TaskComponents/ToRead/ShowEachBook.js","components/TaskComponents/ToRead/NewReadTask.js","components/TaskComponents/ToDo/ToDoTask.js","components/TaskComponents/ToRead/ToReadTask.js","components/App/App.js","serviceWorker.js","index.js"],"names":["StyledModuleList","styled","section","StyledTask","StyledTaskListHeader","h1","TaskListItemContainer","StyledTaskListItem","div","TaskItemHeader","h2","TaskItemDetails","p","StyledImage","img","TaskList","listResults","this","props","taskState","tasks","doList","map","task","i","to","type","_id","key","taskItem","url","thumbnail","alt","src","title","description","Poster","Title","console","log","Component","NewTaskMenu","className","DoTaskContainer","article","NewDoTaskForm","form","FormHeader","NewDoLabel","label","NewDoButton","CreateNewTask","state","due","notes","handleValueChange","bind","submitTask","field","value","setState","fetch","method","headers","body","JSON","stringify","then","res","catch","err","name","placeholder","onChange","evt","target","onClick","bookStyles","height","display","flexDirection","width","justifyContent","alignItems","backgroundColor","ShowEachBook","choice","bookInfo","style","volumeInfo","imageLinks","Datetime","require","newObjPost","NewReadTask","searchText","searchResponse","descriptionInput","dateAndTime","Date","onSearchChange","onEnter","afterSearch","selectOne","onInputChange","submitAction","buildObject","onDateChange","find","json","response","resArray","push","items","error","_d","mode","listOfBooks","el","parentNode","innerText","dateFormat","buttonStyles","margin","StyledReadArticle","ToDoTask","doTask","doURL","match","deleteDoTask","fetchDoTask","parsedJson","location","toDoTask","StyledToDoImage","NewReadButton","taskUrl","ToWatchTask","readTask","readUrl","deleteReadTask","fetchReadTask","App","dateBuf","slice","taskURL","role","path","exact","render","ToReadTask","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f86a919.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledModuleList = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n    padding: 20px;\n    @media (max-width: 400px) {\n        padding: 10px;\n    }\n`\n\nconst StyledTask = styled.section`\n    background: rgb(255,255,157);\n    background: linear-gradient(135deg, \n                rgba(255,255,157,1) 0%, \n                rgba(153,153,65,1) 78%, \n                rgba(117,117,29,1) 93%, \n                rgba(94,94,11,1) 100%);\n    background-size: cover;\n    border: solid 2px black;\n    box-shadow: 5px 5px 5px rgba(0,0,0,0.6);\n    display: flex;\n    height: 300px;\n    color: black;\n    margin: 20px;\n    padding: 40px 20px;\n    text-shadow: 2px 2px black;\n    width: 350px;\n    @media (max-width: 400px){\n        width: 250px;\n        height: 250px;\n        margin: 20px 0px;\n    }\n`\n\nconst StyledTaskListHeader = styled.h1`\n    color: white;\n    font-size: 36px;\n    margin: 5px 0px;\n    text-align: center;\n    text-shadow: 2px 2px black;\n    @media (max-width: 400px){\n        font-size: 30px;\n    }\n`\n\nconst TaskListItemContainer = styled.section`\n    align-items: center;\n    display: flex;\n    justify-content: center;\n`\n\nconst StyledTaskListItem = styled.div`\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    font-size: 20px;\n    justify-content: center;\n    margin: 5px 0px;\n    text-align: center;\n`\n\nconst TaskItemHeader = styled.h2`\n    font-size: 26px;\n    margin: 5px 0px;\n    text-align: center;\n    text-shadow: 1px 1px white;\n`\n\nconst TaskItemDetails = styled.p`\n    color: black;\n    font-size: 20px;\n    margin: 5px 0px;\n    text-align: center;\n    text-shadow: 1px 1px white;\n`\n\nconst StyledImage = styled.img`\n    border: 3px solid black;\n`\n\n\nclass TaskList extends Component {\n\n    render() {\n        const listResults = this.props.taskState.tasks\n        const doList = listResults.map((task, i) => (\n            <Link to={`${task.type}/id/${task._id}`} key={i}>\n                <StyledTask>\n                    {task.taskItem ? (<TaskItemHeader>{task.taskItem}</TaskItemHeader>): (null)}\n\n                    {task.url ? (<TaskItemDetails>{task.url}</TaskItemDetails>): (null)}\n\n                    {task.thumbnail ? (<StyledImage alt={null} src={task.thumbnail} />): (null)}\n\n                    {task.title ? (<TaskItemHeader>{task.title}</TaskItemHeader>): (null)}\n\n                    {task.description ? (<TaskItemDetails>{task.description}</TaskItemDetails>): (null)}\n\n                    {task.Poster ? (<StyledImage alt={null} src={task.Poster} />): (null)}\n\n                    {task.title ? (<TaskItemHeader>{task.Title}</TaskItemHeader>): (null)}\n                </StyledTask>\n            </Link>\n            )\n        );\n        console.log(listResults)\n        return(\n            <div>\n                <StyledModuleList>\n                    <StyledTaskListHeader>{\"Task List\"}</StyledTaskListHeader>\n                    <TaskListItemContainer>\n                        <StyledTaskListItem>{doList}</StyledTaskListItem>\n                    </TaskListItemContainer>\n                </StyledModuleList>\n            </div>\n        )\n    }\n}\n\nexport default TaskList\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./NewTaskMenu.css\"\n\n\nclass NewTaskMenu extends Component {\n    render() {\n        return(\n            <div>\n                <section className=\"newButtonContainer\">\n                    <Link to=\"/NewToDo/\">\n                        <div className=\"boxImage\">New Do</div>\n                    </Link>\n                    <Link to=\"/NewToRead/\">\n                        <div className=\"boxImage\">New Read</div>\n                    </Link>\n                    {/* <Link to=\"/NewToWatch/\">\n                        <div className=\"boxImage\">New Watch</div>\n                    </Link> */}\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default NewTaskMenu","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst DoTaskContainer = styled.article`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst NewDoTaskForm = styled.form`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background-color:  rgba( 0,0,0,0.6);\n    border: solid 2px #FFFF9D;\n    border-radius: 25px;\n    color: white;\n    margin: 125px 0px;\n    padding: 10px;\n    width: 300px;\n    @media (max-width: 400px) {\n        width: 280px;\n    }\n`\n\nconst FormHeader = styled.h1`\n    color: white;\n    font-size: 30px;\n    text-shadow: 2px 2px black;\n`\n\nconst NewDoLabel = styled.label`\n    color: #FFFF9D;\n    font-size: 20px;\n    margin: 10px;\n    text-shadow: 2px 2px black;\n`\n\nconst NewDoButton = styled.div`\n    background-color: #2F4562;\n    border: 1px solid lightslategray;\n    /* box-shadow: 0px 0px 5px yellow; */\n    margin: 20px;\n    padding: 5px;\n    text-shadow: 2px 2px black;\n    text-align: center;\n    width: 100px;\n`\n\nconst taskURL = \"https://todolist-sei32.herokuapp.com/todo/\";\n\nexport default class CreateNewTask extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            taskItem:'',\n            due: '',\n            notes: '',\n            type: 'todo'\n        }\n        this.handleValueChange = this.handleValueChange.bind(this)\n        this.submitTask = this.submitTask.bind(this)\n    }\n\n    handleValueChange(field, value) {\n        // const description = evt.target.description;\n        // const value = evt.target.value;\n        this.setState({\n            [field]: value\n\n        })\n    }\n\n    submitTask() {\n        fetch(taskURL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\",\n            },\n            body: JSON.stringify(this.state)\n        }).then(res => console.log(res))\n        .catch(err => console.log(err));\n}\n\n    render() {\n        return (\n            <div>\n                <DoTaskContainer>\n                    <NewDoTaskForm>\n                        <FormHeader>Create New Task</FormHeader>\n                        <NewDoLabel>Pick a date</NewDoLabel>\n                        <input \n                        name=\"due\"\n                        type=\"date\"\n                        placeholder=\"Due\"\n                        onChange={evt => this.handleValueChange(\"due\", evt.target.value)}\n                        />\n                        <NewDoLabel>Task</NewDoLabel>\n                        <input \n                        name=\"taskItem\"\n                        type=\"text\"\n                        placeholder=\"Task\"\n                        onChange={evt => this.handleValueChange(\"taskItem\", evt.target.value)}\n                        />\n                        <NewDoLabel>Notes</NewDoLabel>\n                        <input \n                        name=\"notes\"\n                        type=\"text\"\n                        placeholder=\"Notes\"\n                        onChange={evt => this.handleValueChange(\"url\", evt.target.value)}\n                        />\n                        <Link to={'/'}>\n                            <NewDoButton onClick={this.submitTask}>\n                                Submit\n                            </NewDoButton>\n                        </Link>\n                    </NewDoTaskForm>\n                </DoTaskContainer>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nconst bookStyles = {\n    height: \"350px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"350px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#eee\",\n}\n\nconst ShowEachBook = ({ choice, bookInfo }) => (\n            <div style={bookStyles}>\n                {bookInfo.volumeInfo.title}\n                <img alt=\"book from a search\" src={bookInfo.volumeInfo.imageLinks.thumbnail} onClick={choice} />\n                {/* <p>{bookInfo.searchInfo.textSnippet}</p> */}\n            </div>\n        )\n\n\nexport default ShowEachBook","import React, { Component } from 'react';\nimport SearchField from \"react-search-field\";\nimport ShowEachBook from './ShowEachBook';\nimport styled from 'styled-components';\nlet Datetime = require('react-datetime');\n\n\nconst DoTaskContainer = styled.article`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst NewDoTaskForm = styled.form`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background-color:  rgba( 0,0,0,0.6);\n    border: solid 2px #FFFF9D;\n    color: white;\n    margin-top: 125px;\n    padding: 10px;\n    width: 80vw;\n`\n\nconst FormHeader = styled.h1`\n    color: white;\n    font-size: 30px;\n    text-align: center;\n    text-shadow: 2px 2px black;\n`\n\nconst NewDoLabel = styled.label`\n    color: #FFFF9D;\n    font-size: 20px;\n    margin: 20px;\n    text-shadow: 2px 2px black;\n`\n\nconst NewDoButton = styled.div`\n    align-items: center;\n    background-color: #2F4562;\n    border: 1px solid #FFFF9D;\n    color: white;\n    display: flex;\n    justify-content: center;\n    margin: 20px;\n    padding: 5px;\n    text-shadow: 2px 2px black;\n    text-align: center;\n    width: 100px;\n`\n\nlet newObjPost = {};\n\nexport default class NewReadTask extends Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            searchText: null,\n            searchResponse: [],\n            descriptionInput: '',\n            dateAndTime: Date\n        }\n        this.onSearchChange=this.onSearchChange.bind(this)\n        this.onEnter=this.onEnter.bind(this)\n        this.afterSearch = this.afterSearch.bind(this)\n        this.selectOne = this.selectOne.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.submitAction = this.submitAction.bind(this)\n        this.buildObject = this.buildObject.bind(this)\n        this.onDateChange = this.onDateChange.bind(this)\n    \n    }\n    onSearchChange(value, evt) {\n        this.setState({\n            searchText: value\n        })\n    }\n    onInputChange(evt) {\n        console.log(evt.target.value)\n        this.setState({\n            descriptionInput: evt.target.value\n        })\n    }\n    afterSearch(res) {\n        this.setState({\n            searchResponse: res\n        }) \n    }\n\n    // Narrows search to one choice to add to the list\n    selectOne(choice){\n       this.setState({\n           searchResponse: [this.state.searchResponse.find((value) => value.volumeInfo.title === choice)]\n       }) \n    }\n\n    onEnter(value, evt) {\n        \n        const APIkey = '&key=AIzaSyD5tsK6CR7eAgHDP8UYHk7CPIBevw6sRUk'\n        const GoogleURL = \"https://www.googleapis.com/books/v1/volumes?q=+intitle:\";\n        const url = `${GoogleURL}${this.state.searchText}${APIkey}`;\n       \n        fetch(url)\n        .then(res => res.json())\n        .then(response => {\n            let resArray = []\n            for(let i = 0; i < 10; i++){\n                resArray.push(response.items[i])\n            }\n            this.afterSearch(resArray)\n\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n    buildObject() {\n        newObjPost.title = this.state.searchResponse[0].volumeInfo.title\n        newObjPost.thumbnail = this.state.searchResponse[0].volumeInfo.imageLinks.thumbnail\n        newObjPost.description = this.state.descriptionInput\n        newObjPost.due = this.state.dateAndTime\n        newObjPost.type = 'toread'\n        console.log(newObjPost)\n    }\n\n    onDateChange(evt){\n        this.setState({\n            dateAndTime: evt._d\n        })\n    }\n\n    submitAction() {\n        this.buildObject()\n        fetch(\"https://todolist-sei32.herokuapp.com/toread/\", {\n            method: \"POST\",\n            mode: 'cors',\n            body: JSON.stringify(newObjPost),\n            headers: {\n                'Content-Type': 'application/json',\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Host\": \"https://todolist-sei32.herokuapp.com/\"\n            },\n            \n        }).then(res => console.log(res))\n    }\n\n    render() {\n\n        console.log(this.state.searchResponse)\n        \n       const listOfBooks = this.state.searchResponse.map(el => {\n            return <ShowEachBook bookInfo={el} choice={(evt) => this.selectOne(evt.target.parentNode.innerText)}  />\n        })\n        var date = new Date();\n        return (\n            <div>\n                <DoTaskContainer>\n                    <NewDoTaskForm>\n                        <FormHeader>Search For Your Book</FormHeader>\n                        <NewDoLabel>Pick a date:</NewDoLabel>\n                        <Datetime dateFormat={true} onChange={(evt)=> this.onDateChange(evt)} />\n                        <NewDoLabel>Search books:</NewDoLabel>\n                        <SearchField \n                        placeholder=\"Search\"\n                        onChange={(value, evt) => this.onSearchChange(value, evt)}\n                        onEnter={(value, evt) => this.onEnter(value, evt)}\n                        />\n                        {listOfBooks}\n                        <NewDoLabel>Notes:</NewDoLabel>\n                        <input onChange={(evt) => this.onInputChange(evt)} />\n                        <NewDoButton style={buttonStyles} onClick={() => this.submitAction()}>Submit</NewDoButton>\n                    </NewDoTaskForm>\n                </DoTaskContainer>\n            </div>\n        )\n    }\n}\n\nconst buttonStyles = {\n    height: \"50px\",\n    width: \"200px\",\n    margin: \"30px\"\n}\n\nconst newTaskStyles = {\n    margin: \"0 auto\",\n    height: \"auto\",\n    width: \"90%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledReadArticle = styled.article`\n    align-items: center;\n    background: rgb(255,255,157);\n    background: linear-gradient(135deg, \n                rgba(255,255,157,1) 0%, \n                rgba(153,153,65,1) 78%, \n                rgba(117,117,29,1) 93%, \n                rgba(94,94,11,1) 100%);\n    background-size: cover;\n    border: solid 2px black;\n    box-shadow: 5px 5px 5px rgba(0,0,0,0.6);\n    color: black;\n    display: flex;\n    flex-direction: column;\n    font-size: 16px;\n    height: 350px;\n    justify-content: space-evenly;\n    margin: 20px;\n    padding: 20px 20px;\n    text-shadow: 2px 2px white;\n    width: 350px;\n    @media (max-width: 400px){\n        width: 260px;\n        height: 260px;\n        margin: 20px 0px;\n    }\n`\n\nconst TaskItemHeader = styled.h2`\n    font-size: 26px;\n    margin: 5px 0px;\n    text-align: center;\n    text-shadow: 1px 1px white;\n    @media (max-width: 400px){\n        font-size: 24px;\n    }\n`\n\nconst TaskItemDetails = styled.p`\n    color: black;\n    font-size: 20px;\n    margin: 5px 0px;\n    text-align: center;\n    text-shadow: 1px 1px white;\n`\n\nconst NewDoButton = styled.div`\n    background-color: #172231;\n    border: 3px solid #2E4562;\n    /* box-shadow: 0px 0px 5px yellow; */\n    margin: 20px;\n    padding: 5px;\n    text-shadow: 2px 2px black;\n    text-align: center;\n    width: 100px;\n`\n\nconst taskURL = \"https://todolist-sei32.herokuapp.com\";\n\nclass ToDoTask extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          doTask: {},\n          doURL: this.props.match.url\n        }\n        this.deleteDoTask = this.deleteDoTask.bind(this)\n        this.fetchDoTask = this.fetchDoTask.bind(this)\n    }\n\n    componentDidMount() {\n        this.fetchDoTask();\n      }\n\n    fetchDoTask() {\n        fetch(taskURL + this.state.doURL, {\n            method: \"GET\",\n        })\n        .then( response => response.json()\n        .then( (parsedJson) => {\n          this.setState({\n            doTask: parsedJson[0]\n          })\n        }\n        ))\n    }\n\n    deleteDoTask() {\n        fetch(taskURL + this.state.doURL, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\"\n            },\n        }).then(res => console.log(res))\n        .catch(err => console.log(err));\n        this.props.location.push(\"/\")\n    };\n    render() {\n        const toDoTask = this.state.doTask;\n        return (\n            <div>\n                <StyledReadArticle>\n                    <section>\n                        <TaskItemHeader>{toDoTask.taskItem}</TaskItemHeader>\n                        <TaskItemDetails>{toDoTask.url}</TaskItemDetails>\n                    </section>\n                    <section>\n                        <Link to=\"/\">\n                            <NewDoButton onClick={this.deleteDoTask}>Delete Task</NewDoButton>\n                        </Link>\n                    </section>\n                </StyledReadArticle>\n            </div>\n        )\n    }\n}\n\nexport default ToDoTask","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledReadArticle = styled.article`\n    align-items: center;\n    background: rgb(255,255,157);\n    background: linear-gradient(135deg, \n                rgba(255,255,157,1) 0%, \n                rgba(153,153,65,1) 78%, \n                rgba(117,117,29,1) 93%, \n                rgba(94,94,11,1) 100%);\n    background-size: cover;\n    border: solid 2px black;\n    box-shadow: 5px 5px 5px rgba(0,0,0,0.6);\n    color: black;\n    display: flex;\n    flex-direction: column;\n    font-size: 16px;\n    height: 350px;\n    justify-content: center;\n    margin: 20px;\n    padding: 10px 20px;\n    text-shadow: 2px 2px white;\n    width: 350px;\n    @media (max-width: 400px){\n        width: 260px;\n        height: 300px;\n        margin: 20px 0px;\n    }\n`\n\nconst TaskItemHeader = styled.h2`\n    font-size: 26px;\n    margin: 5px 0px;\n    text-align: center;\n    text-shadow: 1px 1px white;\n    @media (max-width: 400px){\n        font-size: 24px;\n    }\n`\n\nconst TaskItemDetails = styled.p`\n    color: black;\n    font-size: 20px;\n    margin: 5px 0px;\n    text-align: center;\n    text-shadow: 1px 1px white;\n`\n\nconst StyledToDoImage = styled.img`\n    border: 3px solid black;\n    height: auto;\n    max-width: 200px;\n`\n\nconst NewReadButton = styled.div`\n    background-color: #172231;\n    border: 3px solid #2E4562;\n    /* box-shadow: 0px 0px 5px yellow; */\n    padding: 5px;\n    text-shadow: 2px 2px black;\n    text-align: center;\n    width: 100px;\n`\n\nconst taskUrl = \"https://todolist-sei32.herokuapp.com\";\n\nclass ToWatchTask extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          readTask: [],\n          readUrl: this.props.match.url\n        }\n        this.deleteDoTask = this.deleteReadTask.bind(this)\n        this.fetchReadTask = this.fetchReadTask.bind(this)\n    }\n\n    componentDidMount() {\n        this.fetchReadTask();\n      }\n\n    fetchReadTask() {\n        fetch(taskUrl + this.state.readUrl, {\n            method: \"GET\",\n        })\n        .then( response => response.json()\n        .then( (parsedJson) => {\n          this.setState({\n            readTask: parsedJson[0]\n          })\n        }\n        ))\n    }\n\n    deleteReadTask() {\n        fetch(taskUrl + this.state.readUrl, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\"\n            },\n        }).then(res => console.log(res))\n        .catch(err => console.log(err));\n    };\n    render() {\n        // const toReadTask = this.state.readTask;\n        console.log(this.state.readTask)\n        return (\n            <div>\n                <StyledReadArticle>\n                    <StyledToDoImage src={this.state.readTask.thumbnail} alt={this.state.readTask.title}/>\n                    <section>\n                        <TaskItemHeader>{this.state.readTask.title}</TaskItemHeader>\n                        <TaskItemDetails>{this.state.readTask.description}</TaskItemDetails>\n                    </section>\n                    <section>\n                        <Link to=\"/\">\n                            <NewReadButton onClick={this.deleteReadTask}>Delete Task</NewReadButton>\n                        </Link>\n                    </section>\n                </StyledReadArticle>\n            </div>\n        )\n    }\n}\n\nexport default ToWatchTask","\nimport React, { Component } from 'react'\nimport TaskList from '../TasksList/TasksList'\nimport NewTaskMenu from '../NewTask/NewTaskMenu'\nimport NewDoTask from '../TaskComponents/ToDo/NewDoTask'\n// import NewWatchTask from '../TaskComponents/ToWatch/NewWatchTask'\nimport NewReadTask from '../TaskComponents/ToRead/NewReadTask'\nimport ToDoTask from \"../TaskComponents/ToDo/ToDoTask\"\nimport ToReadTask from \"../TaskComponents/ToRead/ToReadTask\"\n// import ToWatchTask from \"../TaskComponents/ToWatch/ToWatchTask\"\nimport { Route, Link } from 'react-router-dom'\nimport './App.css'\n\nlet Datetime = require('react-datetime')\n\n\nconst taskURL = \"https://todolist-sei32.herokuapp.com/\";\n// const taskURL = \"http://localhost:8081/\";\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      tasks: [],\n      dateAndTime: null,\n    }\n    this.onDateChange = this.onDateChange.bind(this)\n  }\n\n  onDateChange(evt){\n    let dateBuf = new Date(evt._d)\n    dateBuf = JSON.stringify(dateBuf)\n    dateBuf = dateBuf.slice(1,11)\n    \n    this.setState({\n        dateAndTime: dateBuf\n    })\n      if(this.state.dateAndTime) {\n      fetch(taskURL+\"index/\"+this.state.dateAndTime, {\n        method: \"GET\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        }\n      })\n        .then( response => response.json()\n        .then( (parsedJson) => {\n          this.setState({ tasks: parsedJson })\n        }))\n      } else {\n        return\n      }\n\n  }\n\n  render () {\n    return (\n      <div>\n        <nav className=\"navbar\">\n          <Link to=\"/\">\n            <h1 className=\"logo\">YouDue<span role=\"img\">&#x270F;&#xFE0F;</span></h1>\n          </Link>\n          <section>\n            <p className=\"pickDate blinking\">Double-Click A Date</p>\n            <Datetime className=\"dateTime\" dateFormat={true} onChange={(evt)=> this.onDateChange(evt)} />\n          </section>\n          <Link to=\"/NewTask/\">\n            <h4 className=\"createTask \">Create New Task</h4>\n          </Link>\n        </nav>\n        <section>\n          <Route \n            path=\"/\"\n            exact\n            render={() => <TaskList taskState={this.state} />}\n          />\n          <Route\n            path=\"/NewTask/\"\n            exact\n            render={props => <NewTaskMenu {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/NewToDo/\"\n            exact\n            render={props => <NewDoTask {...props} {...this.state} />}\n          />\n          {/* <Route\n            path=\"/NewToWatch/\"\n            exact\n            render={props => <NewWatchTask {...props} {...this.state} />}\n          /> */}\n          <Route\n            path=\"/NewToRead/\"\n            exact\n            render={props => <NewReadTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/todo/id/:id\"\n            exact\n            render={props => <ToDoTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/toread/id/:id\"\n            exact\n            render={props => <ToReadTask {...props} {...this.state} />}\n          />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from '../src/components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n        <Router>\n            <style>\n@import url('https://fonts.googleapis.com/css?family=Righteous&display=swap');\n</style>\n\n            <App/>\n        </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}