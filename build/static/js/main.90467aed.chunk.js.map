{"version":3,"sources":["components/TasksList/TasksList.js","components/NewTask/NewTaskMenu.js","components/TaskComponents/ToDo/NewDoTask.js","components/TaskComponents/ToWatch/ShowEachFilm.js","components/TaskComponents/ToWatch/NewWatchTask.js","components/TaskComponents/ToRead/ShowEachBook.js","components/TaskComponents/ToRead/NewReadTask.js","components/TaskComponents/ToRead/ToReadTask.js","components/TaskComponents/ToWatch/ToWatchTask.js","components/TaskComponents/ToDo/EditToDo.js","components/App/App.js","serviceWorker.js","index.js"],"names":["StyledModuleList","styled","section","StyledModuleListItem","article","StyledTaskListHeader","h1","StyledTaskListItem","div","TaskList","listResults","this","props","taskState","tasks","doList","map","task","i","to","type","_id","key","taskItem","alt","src","thumbnail","title","description","Poster","Title","console","log","Component","NewTaskMenu","className","CreateNewTask","state","due","url","handleValueChange","bind","submitTask","field","value","setState","fetch","method","headers","body","JSON","stringify","then","res","catch","err","name","placeholder","onChange","evt","target","onClick","filmStyles","height","display","flexDirection","width","justifyContent","alignItems","backgroundColor","filmThumbnail","ShowEachFilm","choice","filmInfo","style","Datetime","require","newObjPost","ToWatchList","searchText","searchResponse","descriptionInput","dateAndTime","Date","onSearchChange","onEnter","afterSearch","selectOne","onInputChange","submitAction","buildObject","onDateChange","find","json","Search","error","_d","mode","listOfFilms","el","parentNode","innerText","newTaskStyles","dateFormat","buttonStyles","margin","bookStyles","ShowEachBook","bookInfo","volumeInfo","imageLinks","StyledHeader","StyledSearch","NewReadTask","response","resArray","push","items","listOfBooks","StyledToDoImage","img","taskUrl","ToWatchTask","readTask","readUrl","match","deleteDoTask","fetchReadTask","parsedJson","readTasktitle","readTaskdue","doTask","doURL","toDoTask","image","EditTask","updateTask","App","dateBuf","slice","taskURL","role","path","exact","render","ToReadTask","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90467aed.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledModuleList = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 10 auto;\n`\n\nconst StyledModuleListItem = styled.article`\n    background-color:  rgba( 0,0,0,0.6);\n    border: solid 4px black;\n    border-radius: 25px;\n    box-shadow: 5px 5px 5px yellow;\n    color: white;\n    margin-top: 125px;\n    width: 300px;\n`\n\nconst StyledTaskListHeader = styled.h1`\n    font-size: 30px;\n    text-align: center;\n`\n\nconst StyledTaskListItem = styled.div`\n    color: white;\n    font-size: 30px;\n    text-align: center;\n`\n\n\nclass TaskList extends Component {\n\n    render() {\n        const listResults = this.props.taskState.tasks\n            const doList = listResults.map((task, i) => (\n                <Link to={`${task.type}/id/${task._id}`} key={i}>\n                        <p>{task.taskItem}</p>\n                        <img alt={null} src={task.thumbnail} />\n                        <p>{task.title}</p>\n                        <p>{task.description}</p>\n                        <img alt={null} src={task.Poster} />\n                        <p>{task.Title}</p>\n                </Link>\n                )\n            );\n            console.log(listResults)\n        return(\n            <div>\n                <StyledModuleList>\n                    <StyledModuleListItem>\n                            <StyledTaskListHeader>{\"To-Do List\"}</StyledTaskListHeader>\n                            <section>\n                                <article>\n                                    <StyledTaskListItem>{doList}</StyledTaskListItem>\n                                </article>\n                            </section>\n                    </StyledModuleListItem>\n                </StyledModuleList>\n            </div>\n        )\n    }\n}\n\nexport default TaskList\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./NewTaskMenu.css\"\n\n\nclass NewTaskMenu extends Component {\n    render() {\n        return(\n            <div>\n                <div className=\"wrapper\">\n                <section>\n                    <Link to=\"/NewToDo/\">\n                        <div className=\"boxImage\">\n                        <div>New Do</div>\n                        </div>\n                    </Link>\n                    <Link to=\"/NewToRead/\">\n                    <div className=\"boxImage\">\n                        <div>New Read</div>\n                        </div>\n                    </Link>\n                    <Link to=\"/NewToWatch/\">\n                    <div className=\"boxImage\">\n                        <div>New Watch</div>\n                        </div>\n                    </Link>\n                </section>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewTaskMenu","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst taskURL = \"https://todolist-sei32.herokuapp.com/todo/\";\n\nexport default class CreateNewTask extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            taskItem:'',\n            due: '',\n            url: '',\n            type: 'todo'\n        }\n        this.handleValueChange = this.handleValueChange.bind(this)\n        this.submitTask = this.submitTask.bind(this)\n    }\n\n    handleValueChange(field, value) {\n        // const description = evt.target.description;\n        // const value = evt.target.value;\n        this.setState({\n            [field]: value\n\n        })\n    }\n\n    submitTask() {\n        fetch(taskURL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\",\n            },\n            body: JSON.stringify(this.state)\n        }).then(res => console.log(res))\n        .catch(err => console.log(err));\n}\n\n    render() {\n        return (\n            <div>\n                <article>\n                    <h1>Create New Task</h1>\n                    <form>\n                        <input \n                        name=\"taskItem\"\n                        type=\"text\"\n                        placeholder=\"Description\"\n                        onChange={evt => this.handleValueChange(\"taskItem\", evt.target.value)}\n                        />\n                        <input \n                        name=\"due\"\n                        type=\"date\"\n                        placeholder=\"Due\"\n                        onChange={evt => this.handleValueChange(\"due\", evt.target.value)}\n                        />\n                        <input \n                        name=\"url\"\n                        type=\"text\"\n                        placeholder=\"URL\"\n                        onChange={evt => this.handleValueChange(\"url\", evt.target.value)}\n                        />\n                        <Link to={'/'}>\n                            <button onClick={this.submitTask}>\n                                Submit\n                            </button>\n                        </Link>\n                    </form>\n                </article>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nconst filmStyles = {\n    height: \"350px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"350px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#eee\",\n}\n\nconst filmThumbnail = {\n    height: \"250px\",\n    width: \"auto\"\n}\n\nconst ShowEachFilm = ({ choice, filmInfo }) => (\n            <div style={filmStyles} >\n                <h2>{filmInfo.Title}</h2>\n                <img alt=\"film poster\" src={filmInfo.Poster} style={filmThumbnail} onClick={choice}/>\n                {/* {bookInfo.volumeInfo.title} */}\n                {/* <img alt=\"book from a search\" src={bookInfo.volumeInfo.imageLinks.thumbnail} /> */}\n                {/* <p>{bookInfo.searchInfo.textSnippet}</p> */}\n            </div>\n        )\n\n\nexport default ShowEachFilm","import React, { Component } from 'react';\nimport SearchField from \"react-search-field\";\nimport ShowEachFilm from './ShowEachFilm';\nlet Datetime = require('react-datetime');\n\nlet newObjPost = {};\n\nexport default class ToWatchList extends Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            searchText: null,\n            searchResponse: [],\n            descriptionInput: '',\n            dateAndTime: Date\n        }\n        this.onSearchChange=this.onSearchChange.bind(this)\n        this.onEnter=this.onEnter.bind(this)\n        this.afterSearch = this.afterSearch.bind(this)\n        this.selectOne = this.selectOne.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.submitAction = this.submitAction.bind(this)\n        this.buildObject = this.buildObject.bind(this)\n        this.onDateChange = this.onDateChange.bind(this)\n    \n    }\n    onSearchChange(value, evt) {\n        this.setState({\n            searchText: value\n        })\n    }\n    onInputChange(evt) {\n        console.log(evt.target.value)\n        this.setState({\n            descriptionInput: evt.target.value\n        })\n    }\n    afterSearch(res) {\n        this.setState({\n            searchResponse: res\n        }) \n    }\n\n    // Narrows search to one choice to add to the list\n    selectOne(choice){\n       this.setState({\n           searchResponse: [this.state.searchResponse.find((value) => value.Title === choice)]\n       }) \n    }\n\n    onEnter() {\n        \n        const APIkey = '?apikey=cd212def&s='\n        const movieURL = \"http://www.omdbapi.com/\";\n        const url = `${movieURL}${APIkey}${this.state.searchText}`;\n       \n        fetch(url)\n        .then(res => res.json())\n        .then(res => this.afterSearch(res.Search))\n        .catch(err => {\n          console.error(err);\n        });\n    }\n\n    buildObject() {\n        newObjPost.Title = this.state.searchResponse[0].Title\n        newObjPost.Poster = this.state.searchResponse[0].Poster\n        newObjPost.description = this.state.descriptionInput\n        newObjPost.due = this.state.dateAndTime\n        newObjPost.type = 'towatch'\n        console.log(newObjPost)\n    }\n\n    onDateChange(evt){\n        this.setState({\n            dateAndTime: evt._d\n        })\n    }\n\n    submitAction() {\n        this.buildObject()\n        fetch(\"https://todolist-sei32.herokuapp.com/towatch/\", {\n            method: \"POST\",\n            mode: 'cors',\n            body: JSON.stringify(newObjPost),\n            headers: {\n                'Content-Type': 'application/json',\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\",\n                \"Host\": \"https://todolist-sei32.herokuapp.com/\"\n            },\n            \n        }).then(res => console.log(res))\n    }\n\n    render() {\n       const listOfFilms = this.state.searchResponse.map(el => {\n            return <ShowEachFilm filmInfo={el} choice={(evt) => this.selectOne(evt.target.parentNode.innerText)} />\n        })\n        var date = new Date();\n        return (\n            <div style={newTaskStyles}>\n                <h1>Search For A Movie Title</h1>  \n                <Datetime dateFormat={true} onChange={(evt)=> this.onDateChange(evt)} />\n  \n                <SearchField \n                placeholder=\"Search\"\n                onChange={(value, evt) => this.onSearchChange(value, evt)}\n                onEnter={() => this.onEnter()}\n                />\n                {listOfFilms}\n                <input onChange={(evt) => this.onInputChange(evt)} />\n                <button style={buttonStyles} onClick={() => this.submitAction()}>Submit</button>\n            </div>\n        )\n    }\n}\n\nconst buttonStyles = {\n    height: \"50px\",\n    width: \"200px\",\n    margin: \"30px\"\n}\n\nconst newTaskStyles = {\n    margin: \"0 auto\",\n    height: \"auto\",\n    width: \"90%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n}","import React from 'react'\n\nconst bookStyles = {\n    height: \"350px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"350px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#eee\",\n}\n\nconst ShowEachBook = ({ choice, bookInfo }) => (\n            <div style={bookStyles}>\n                {bookInfo.volumeInfo.title}\n                <img alt=\"book from a search\" src={bookInfo.volumeInfo.imageLinks.thumbnail} onClick={choice} />\n                {/* <p>{bookInfo.searchInfo.textSnippet}</p> */}\n            </div>\n        )\n\n\nexport default ShowEachBook","import React, { Component } from 'react';\nimport SearchField from \"react-search-field\";\nimport ShowEachBook from './ShowEachBook';\nimport styled from 'styled-components';\nlet Datetime = require('react-datetime');\n\n\nconst StyledHeader = styled.h1`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  justify-content: space-around;\n  color: white;\n`\n\nconst StyledSearch = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  justify-content: space-around;\n`\n\nlet newObjPost = {};\n\nexport default class NewReadTask extends Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            searchText: null,\n            searchResponse: [],\n            descriptionInput: '',\n            dateAndTime: Date\n        }\n        this.onSearchChange=this.onSearchChange.bind(this)\n        this.onEnter=this.onEnter.bind(this)\n        this.afterSearch = this.afterSearch.bind(this)\n        this.selectOne = this.selectOne.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.submitAction = this.submitAction.bind(this)\n        this.buildObject = this.buildObject.bind(this)\n        this.onDateChange = this.onDateChange.bind(this)\n    \n    }\n    onSearchChange(value, evt) {\n        this.setState({\n            searchText: value\n        })\n    }\n    onInputChange(evt) {\n        console.log(evt.target.value)\n        this.setState({\n            descriptionInput: evt.target.value\n        })\n    }\n    afterSearch(res) {\n        this.setState({\n            searchResponse: res\n        }) \n    }\n\n    // Narrows search to one choice to add to the list\n    selectOne(choice){\n       this.setState({\n           searchResponse: [this.state.searchResponse.find((value) => value.volumeInfo.title === choice)]\n       }) \n    }\n\n    onEnter(value, evt) {\n        \n        const APIkey = '&key=AIzaSyDlLQvTxUGYnqHAfApV_W4iXcif3xYDdSg'\n        const GoogleURL = \"https://www.googleapis.com/books/v1/volumes?q=+intitle:\";\n        const url = `${GoogleURL}${this.state.searchText}${APIkey}`;\n       \n        fetch(url)\n        .then(res => res.json())\n        .then(response => {\n            let resArray = []\n            for(let i = 0; i < 10; i++){\n                resArray.push(response.items[i])\n            }\n            this.afterSearch(resArray)\n\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n    buildObject() {\n        newObjPost.title = this.state.searchResponse[0].volumeInfo.title\n        newObjPost.thumbnail = this.state.searchResponse[0].volumeInfo.imageLinks.thumbnail\n        newObjPost.description = this.state.descriptionInput\n        newObjPost.due = this.state.dateAndTime\n        newObjPost.type = 'toread'\n        console.log(newObjPost)\n    }\n\n    onDateChange(evt){\n        this.setState({\n            dateAndTime: evt._d\n        })\n    }\n\n    submitAction() {\n        this.buildObject()\n        fetch(\"https://todolist-sei32.herokuapp.com/toread/\", {\n            method: \"POST\",\n            mode: 'cors',\n            body: JSON.stringify(newObjPost),\n            headers: {\n                'Content-Type': 'application/json',\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Host\": \"https://todolist-sei32.herokuapp.com/\"\n            },\n            \n        }).then(res => console.log(res))\n    }\n\n    render() {\n\n        console.log(this.state.searchResponse)\n        \n       const listOfBooks = this.state.searchResponse.map(el => {\n            return <ShowEachBook bookInfo={el} choice={(evt) => this.selectOne(evt.target.parentNode.innerText)}  />\n        })\n        var date = new Date();\n        return (\n            <div style={newTaskStyles}>\n                <StyledHeader>Search For Your Book Title</StyledHeader>  \n                <Datetime dateFormat={true} onChange={(evt)=> this.onDateChange(evt)} />\n               \n                <StyledSearch>\n                <SearchField \n                placeholder=\"Search\"\n                onChange={(value, evt) => this.onSearchChange(value, evt)}\n                onEnter={(value, evt) => this.onEnter(value, evt)}\n                />\n                {listOfBooks}\n                </StyledSearch>\n                <input onChange={(evt) => this.onInputChange(evt)} />\n                <button style={buttonStyles} onClick={() => this.submitAction()}>Submit</button>\n            </div>\n        )\n    }\n}\n\nconst buttonStyles = {\n    height: \"50px\",\n    width: \"200px\",\n    margin: \"30px\"\n}\n\nconst newTaskStyles = {\n    margin: \"0 auto\",\n    height: \"auto\",\n    width: \"90%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledToDoImage = styled.img`\n    height: auto;\n    width: 200px;\n`\n\nconst taskUrl = \"https://todolist-sei32.herokuapp.com\";\n\nclass ToWatchTask extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          readTask: [],\n          readUrl: this.props.match.url\n        }\n        this.deleteDoTask = this.deleteDoTask.bind(this)\n        this.fetchReadTask = this.fetchReadTask.bind(this)\n        console.log(this.props.match)\n    }\n\n    componentDidMount() {\n        this.fetchReadTask();\n      }\n\n    fetchReadTask() {\n        fetch(taskUrl + this.state.readUrl, {\n            method: \"GET\",\n        })\n        .then( response => response.json()\n        .then( (parsedJson) => {\n          this.setState({\n            readTask: parsedJson[0]\n          })\n        }\n        ))\n    }\n\n    deleteDoTask() {\n        fetch(taskUrl + this.state.readUrl, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\"\n            },\n        }).then(res => console.log(res))\n        .catch(err => console.log(err));\n    };\n    render() {\n        // const toReadTask = this.state.readTask;\n        console.log(this.state.readTask)\n        return (\n            <div>\n                <article>\n                    <StyledToDoImage src={this.state.readTask.thumbnail} alt={this.state.readTasktitle}/>\n                    <section>\n                        <h2>{this.state.readTasktitle}</h2>\n                        <li>{this.state.readTaskdue}</li>\n                    </section>\n                    <section>\n                        <Link to=\"/\">\n                            <button onClick={this.deleteDoTask}>Delete Task</button>\n                        </Link>\n                    </section>\n                </article>\n            </div>\n        )\n    }\n}\n\nexport default ToWatchTask","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledToDoImage = styled.img`\n    height: auto;\n    width: 200px;\n`\n\nconst taskURL = \"https://todolist-sei32.herokuapp.com\";\n\n\n\nclass ToWatchTask extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          doTask: {},\n          doURL: this.props.match.url\n        }\n        this.deleteDoTask = this.deleteDoTask.bind(this)\n        console.log(this.props.match)\n    }\n\n    deleteDoTask() {\n        fetch(taskURL + this.state.doURL, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\"\n            },\n        }).then(res => console.log(res))\n        .catch(err => console.log(err));\n    };\n    render() {\n        const toDoTask = this.state.doTask;\n        return (\n            <div>\n                <article>\n                    <StyledToDoImage src={toDoTask.image} alt={toDoTask.task}/>\n                    <section>\n                        <h2>{toDoTask.task}</h2>\n                        <li>{toDoTask.due}</li>\n                        <li>{toDoTask.url}</li>\n                    </section>\n                    <section>\n                        <Link to=\"/\">\n                            <button onClick={this.deleteDoTask}>Delete Task</button>\n                        </Link>\n                    </section>\n                </article>\n            </div>\n        )\n    }\n}\n\nexport default ToWatchTask","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\n\n\nconst url = \"https://todolist-sei32.herokuapp.com\";\n\nexport default class EditTask extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            taskItem: '',\n            due: null,\n            url: '',\n        }\n        this.handleValueChange = this.handleValueChange.bind(this)\n        this.updateTask = this.updateTask.bind(this)\n    } \n\n    handleValueChange(field, value) {\n        this.setState({\n            [field]: value\n        })\n        console.log(this.state)\n    }\n\n    updateTask() {\n        fetch(url + this.props.match.url, {\n            method: \"PUT\",\n            headers:{\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"*/*\",\n                \"Cache-Control\": \"no-cache\",\n                \"Connection\": \"keep-alive\"\n            },\n            body: JSON.stringify(this.state)\n        }).then(res => console.log(res));\n        console.log(this.state.taskItem)\n    };\n\n    render() {\n        return (\n            <div>\n                <article>\n                    <header>Update Task</header>\n\n                    <input \n                        name=\"taskItem\"\n                        type=\"text\"\n                        placeholder=\"taskItem\"\n                        onChange={evt => this.handleValueChange(\"taskItem\", evt.target.value)}\n                        />\n                        <input \n                        name=\"due\"\n                        type=\"date\"\n                        placeholder=\"Due\"\n                        onChange={evt => this.handleValueChange(\"due\", evt.target.value)}\n                        />\n                        <input \n                        name=\"url\"\n                        type=\"text\"\n                        placeholder=\"URL\"\n                        onChange={evt => this.handleValueChange(\"url\", evt.target.value)}\n                        />\n                        <Link to={`/`}>\n                            <button onClick={this.updateTask}>\n                                Submit\n                            </button>\n                        </Link>\n\n                </article>    \n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react'\nimport TaskList from '../TasksList/TasksList'\nimport NewTaskMenu from '../NewTask/NewTaskMenu'\nimport NewDoTask from '../TaskComponents/ToDo/NewDoTask'\nimport NewWatchTask from '../TaskComponents/ToWatch/NewWatchTask'\nimport NewReadTask from '../TaskComponents/ToRead/NewReadTask'\n// import ToDoTask from \"../TaskComponents/ToDo/ToDoTask\"\nimport ToReadTask from \"../TaskComponents/ToRead/ToReadTask\"\nimport ToWatchTask from \"../TaskComponents/ToWatch/ToWatchTask\"\nimport EditTask from \"../TaskComponents/ToDo/EditToDo\"\nimport { Route, Link } from 'react-router-dom'\nimport './App.css'\n\nlet Datetime = require('react-datetime')\n\n\nconst taskURL = \"https://todolist-sei32.herokuapp.com/\";\n// const taskURL = \"http://localhost:8081/\";\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      tasks: [],\n      dateAndTime: null,\n    }\n    this.onDateChange = this.onDateChange.bind(this)\n  }\n\n  onDateChange(evt){\n    let dateBuf = new Date(evt._d)\n    dateBuf = JSON.stringify(dateBuf)\n    dateBuf = dateBuf.slice(1,11)\n    \n    this.setState({\n        dateAndTime: dateBuf\n    })\n      if(this.state.dateAndTime) {\n      fetch(taskURL+\"index/\"+this.state.dateAndTime, {\n        method: \"GET\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        }\n      })\n        .then( response => response.json()\n        .then( (parsedJson) => {\n          this.setState({ tasks: parsedJson })\n        }))\n      } else {\n        return\n      }\n\n  }\n\n  \n\n  render () {\n    return (\n      <div>\n        <nav className=\"navbar\">\n        \n          <Link to=\"/\">\n            <h1 className=\"logo\">YouDue<span role=\"img\">\t&#x270F;&#xFE0F; </span></h1>\n          </Link>\n          <h2 className=\"motto\"> Getting things done, <i className=\"onTime\">on time.</i></h2>\n          <Link to=\"/NewTask/\">\n            <h4 className=\"createTask \">Create New Task</h4>\n          </Link>\n          <section>\n            <p className=\"pickDate blinking\"> Pick a Date</p>\n            <Datetime className=\"dateTime\" dateFormat={true} onChange={(evt)=> this.onDateChange(evt)} />\n          </section>\n        </nav>\n        <section>\n          <Route \n            path=\"/\"\n            exact\n            render={() => <TaskList taskState={this.state} />}\n          />\n          <Route\n            path=\"/NewTask/\"\n            exact\n            render={props => <NewTaskMenu {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/NewToDo/\"\n            exact\n            render={props => <NewDoTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/NewToWatch/\"\n            exact\n            render={props => <NewWatchTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/NewToRead/\"\n            exact\n            render={props => <NewReadTask {...props} {...this.state} />}\n          />\n          {/* <Route\n            path=\"/todo/id/:id\"\n            exact\n            render={props => <ToDoTask {...props} {...this.state} />}\n          /> */}\n          <Route\n            path=\"/toread/id/:id\"\n            exact\n            render={props => <ToReadTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/towatch/id/:id\"\n            exact\n            render={props => <ToWatchTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/todo/id/:id\"\n            exact\n            render={props => <EditTask {...props} {...this.state} />}\n          />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from '../src/components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n        <Router>\n            <style>\n@import url('https://fonts.googleapis.com/css?family=Righteous&display=swap');\n</style>\n\n            <App/>\n        </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}