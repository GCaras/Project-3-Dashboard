{"version":3,"sources":["components/TasksList/TasksList.js","components/NewTask/NewTaskMenu.js","components/TaskComponents/ToDo/NewDoTask.js","components/TaskComponents/ToWatch/ShowEachFilm.js","components/TaskComponents/ToWatch/NewWatchTask.js","components/TaskComponents/ToRead/ShowEachBook.js","components/TaskComponents/ToRead/NewReadTask.js","components/TaskComponents/ToDo/ToDoTask.js","components/TaskComponents/ToRead/ToReadTask.js","components/TaskComponents/ToWatch/ToWatchTask.js","components/App/App.js","serviceWorker.js","index.js"],"names":["StyledModuleList","styled","section","StyledModuleListItem","article","StyledTaskListHeader","h1","TaskList","this","props","tasks","map","task","i","to","type","_id","key","Component","NewTaskMenu","className","NewDoTask","filmStyles","height","display","flexDirection","width","justifyContent","alignItems","backgroundColor","filmThumbnail","ShowEachFilm","choice","filmInfo","style","Title","alt","src","Poster","onClick","Datetime","require","newObjPost","ToWatchList","state","searchText","searchResponse","descriptionInput","dateAndTime","Date","onSearchChange","bind","onEnter","afterSearch","selectOne","onInputChange","submitAction","buildObject","onDateChange","value","evt","setState","console","log","target","res","find","url","fetch","then","json","Search","catch","err","error","description","due","_d","method","mode","body","JSON","stringify","headers","listOfFilms","el","parentNode","innerText","newTaskStyles","dateFormat","onChange","placeholder","buttonStyles","margin","bookStyles","ShowEachBook","bookInfo","volumeInfo","title","imageLinks","thumbnail","StyledHeader","StyledSearch","div","NewReadTask","response","resArray","push","items","listOfBooks","StyledToDoImage","img","ToDoTask","doTask","doURL","match","deleteDoTask","toDoTask","image","taskUrl","ToWatchTask","readTask","readUrl","fetchReadTask","parsedJson","toReadTask","App","dateBuf","slice","taskURL","role","path","exact","render","ToReadTask","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23d88a30.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledModuleList = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 10 auto;\n`\n\nconst StyledModuleListItem = styled.article`\n    background-color:  rgba( 0,0,0,0.6);\n    border: solid 4px black;\n    border-radius: 25px;\n    box-shadow: 5px 5px 5px yellow;\n    color: white;\n    margin: 20px;\n    margin-top: 125px;\n    width: 275px;\n    margin-left: 450px;\n    padding: 50px;\n    position: absolute;\n`\n\nconst StyledTaskListHeader = styled.h1`\n    font-size: 30px;\n    text-align: center;\n`\n\nclass TaskList extends Component {\n\n    render() {\n        const TaskList = this.props.tasks.map((task, i) => (\n            <Link to={`${task.type}/id/${task._id}`} key={i}>\n                <li>{task}</li>\n            </Link>\n        ))\n        return(\n            <div>\n                <StyledModuleList>\n                    <StyledModuleListItem>\n                            <StyledTaskListHeader>{\"To-Do List\"}</StyledTaskListHeader>\n                            <section>\n                                <ul>{TaskList}</ul>\n                            </section>\n                    </StyledModuleListItem>\n                </StyledModuleList>\n            </div>\n        )\n    }\n}\n\nexport default TaskList","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./NewTaskMenu.css\"\n\nclass NewTaskMenu extends Component {\n    render() {\n        return(\n            <div>\n                <div className=\"wrapper\">\n                <section>\n                    <Link to=\"/NewToDo/\">\n                        <div className=\"boxImage1\">\n                        <div>New Do</div>\n                        </div>\n                    </Link>\n                    <Link to=\"/NewToRead/\">\n                    <div className=\"boxImage2\">\n                        <div>New Read</div>\n                        </div>\n                    </Link>\n                    <Link to=\"/NewToWatch/\">\n                    <div className=\"boxImage3\">\n                        <div>New Watch</div>\n                        </div>\n                    </Link>\n                </section>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewTaskMenu","import React, { Component } from 'react'\n\nclass NewDoTask extends Component {\n    render() {\n        return(\n            <div>\n                <h1>TEST</h1>\n            </div>\n        )\n    }\n}\n\nexport default NewDoTask","import React from 'react'\n\nconst filmStyles = {\n    height: \"350px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"350px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#eee\",\n}\n\nconst filmThumbnail = {\n    height: \"250px\",\n    width: \"auto\"\n}\n\nconst ShowEachFilm = ({ choice, filmInfo }) => (\n            <div style={filmStyles} >\n                <h2>{filmInfo.Title}</h2>\n                <img alt=\"film poster\" src={filmInfo.Poster} style={filmThumbnail} onClick={choice}/>\n                {/* {bookInfo.volumeInfo.title} */}\n                {/* <img alt=\"book from a search\" src={bookInfo.volumeInfo.imageLinks.thumbnail} /> */}\n                {/* <p>{bookInfo.searchInfo.textSnippet}</p> */}\n            </div>\n        )\n\n\nexport default ShowEachFilm","import React, { Component } from 'react';\nimport SearchField from \"react-search-field\";\nimport ShowEachFilm from './ShowEachFilm';\nlet Datetime = require('react-datetime');\n\nlet newObjPost = {};\n\nexport default class ToWatchList extends Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            searchText: null,\n            searchResponse: [],\n            descriptionInput: '',\n            dateAndTime: Date\n        }\n        this.onSearchChange=this.onSearchChange.bind(this)\n        this.onEnter=this.onEnter.bind(this)\n        this.afterSearch = this.afterSearch.bind(this)\n        this.selectOne = this.selectOne.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.submitAction = this.submitAction.bind(this)\n        this.buildObject = this.buildObject.bind(this)\n        this.onDateChange = this.onDateChange.bind(this)\n    \n    }\n    onSearchChange(value, evt) {\n        this.setState({\n            searchText: value\n        })\n    }\n    onInputChange(evt) {\n        console.log(evt.target.value)\n        this.setState({\n            descriptionInput: evt.target.value\n        })\n    }\n    afterSearch(res) {\n        this.setState({\n            searchResponse: res\n        }) \n    }\n\n    // Narrows search to one choice to add to the list\n    selectOne(choice){\n       this.setState({\n           searchResponse: [this.state.searchResponse.find((value) => value.Title === choice)]\n       }) \n    }\n\n    onEnter() {\n        \n        const APIkey = '?apikey=cd212def&s='\n        const movieURL = \"http://www.omdbapi.com/\";\n        const url = `${movieURL}${APIkey}${this.state.searchText}`;\n       \n        fetch(url)\n        .then(res => res.json())\n        .then(res => this.afterSearch(res.Search))\n        .catch(err => {\n          console.error(err);\n        });\n    }\n\n    buildObject() {\n        newObjPost.Title = this.state.searchResponse[0].Title\n        newObjPost.Poster = this.state.searchResponse[0].Poster\n        newObjPost.description = this.state.descriptionInput\n        newObjPost.due = this.state.dateAndTime\n        newObjPost.type = 'towatch'\n        console.log(newObjPost)\n    }\n\n    onDateChange(evt){\n        this.setState({\n            dateAndTime: evt._d\n        })\n    }\n\n    submitAction() {\n        this.buildObject()\n        fetch(\"https://todolist-sei32.herokuapp.com/towatch/\", {\n            method: \"POST\",\n            mode: 'cors',\n            body: JSON.stringify(newObjPost),\n            headers: {\n                'Content-Type': 'application/json',\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\",\n                \"Host\": \"https://todolist-sei32.herokuapp.com/\"\n            },\n            \n        }).then(res => console.log(res))\n    }\n\n    render() {\n       const listOfFilms = this.state.searchResponse.map(el => {\n            return <ShowEachFilm filmInfo={el} choice={(evt) => this.selectOne(evt.target.parentNode.innerText)} />\n        })\n        var date = new Date();\n        return (\n            <div style={newTaskStyles}>\n                <h1>Search For A Movie Title</h1>  \n                <Datetime dateFormat={true} onChange={(evt)=> this.onDateChange(evt)} />\n  \n                <SearchField \n                placeholder=\"Search\"\n                onChange={(value, evt) => this.onSearchChange(value, evt)}\n                onEnter={() => this.onEnter()}\n                />\n                {listOfFilms}\n                <input onChange={(evt) => this.onInputChange(evt)} />\n                <button style={buttonStyles} onClick={() => this.submitAction()}>Submit</button>\n            </div>\n        )\n    }\n}\n\nconst buttonStyles = {\n    height: \"50px\",\n    width: \"200px\",\n    margin: \"30px\"\n}\n\nconst newTaskStyles = {\n    margin: \"0 auto\",\n    height: \"auto\",\n    width: \"90%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n}","import React from 'react'\n\nconst bookStyles = {\n    height: \"350px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"350px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#eee\",\n}\n\nconst ShowEachBook = ({ choice, bookInfo }) => (\n            <div style={bookStyles}>\n                {bookInfo.volumeInfo.title}\n                <img alt=\"book from a search\" src={bookInfo.volumeInfo.imageLinks.thumbnail} onClick={choice} />\n                {/* <p>{bookInfo.searchInfo.textSnippet}</p> */}\n            </div>\n        )\n\n\nexport default ShowEachBook","import React, { Component } from 'react';\nimport SearchField from \"react-search-field\";\nimport ShowEachBook from './ShowEachBook';\nimport styled from 'styled-components';\nlet Datetime = require('react-datetime');\n\n\nconst StyledHeader = styled.h1`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  justify-content: space-around;\n  color: white;\n`\n\nconst StyledSearch = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  justify-content: space-around;\n`\n\nlet newObjPost = {};\n\nexport default class NewReadTask extends Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            searchText: null,\n            searchResponse: [],\n            descriptionInput: '',\n            dateAndTime: Date\n        }\n        this.onSearchChange=this.onSearchChange.bind(this)\n        this.onEnter=this.onEnter.bind(this)\n        this.afterSearch = this.afterSearch.bind(this)\n        this.selectOne = this.selectOne.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.submitAction = this.submitAction.bind(this)\n        this.buildObject = this.buildObject.bind(this)\n        this.onDateChange = this.onDateChange.bind(this)\n    \n    }\n    onSearchChange(value, evt) {\n        this.setState({\n            searchText: value\n        })\n    }\n    onInputChange(evt) {\n        console.log(evt.target.value)\n        this.setState({\n            descriptionInput: evt.target.value\n        })\n    }\n    afterSearch(res) {\n        this.setState({\n            searchResponse: res\n        }) \n    }\n\n    // Narrows search to one choice to add to the list\n    selectOne(choice){\n       this.setState({\n           searchResponse: [this.state.searchResponse.find((value) => value.volumeInfo.title === choice)]\n       }) \n    }\n\n    onEnter(value, evt) {\n        \n        const APIkey = '&key=AIzaSyDlLQvTxUGYnqHAfApV_W4iXcif3xYDdSg'\n        const GoogleURL = \"https://www.googleapis.com/books/v1/volumes?q=+intitle:\";\n        const url = `${GoogleURL}${this.state.searchText}${APIkey}`;\n       \n        fetch(url)\n        .then(res => res.json())\n        .then(response => {\n            let resArray = []\n            for(let i = 0; i < 10; i++){\n                resArray.push(response.items[i])\n            }\n            this.afterSearch(resArray)\n\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n    buildObject() {\n        newObjPost.title = this.state.searchResponse[0].volumeInfo.title\n        newObjPost.thumbnail = this.state.searchResponse[0].volumeInfo.imageLinks.thumbnail\n        newObjPost.description = this.state.descriptionInput\n        newObjPost.due = this.state.dateAndTime\n        newObjPost.type = 'toread'\n        console.log(newObjPost)\n    }\n\n    onDateChange(evt){\n        this.setState({\n            dateAndTime: evt._d\n        })\n    }\n\n    submitAction() {\n        this.buildObject()\n        fetch(\"https://todolist-sei32.herokuapp.com/toread/\", {\n            method: \"POST\",\n            mode: 'cors',\n            body: JSON.stringify(newObjPost),\n            headers: {\n                'Content-Type': 'application/json',\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Host\": \"https://todolist-sei32.herokuapp.com/\"\n            },\n            \n        }).then(res => console.log(res))\n    }\n\n    render() {\n\n        console.log(this.state.searchResponse)\n        \n       const listOfBooks = this.state.searchResponse.map(el => {\n            return <ShowEachBook bookInfo={el} choice={(evt) => this.selectOne(evt.target.parentNode.innerText)}  />\n        })\n        var date = new Date();\n        return (\n            <div style={newTaskStyles}>\n                <StyledHeader>Search For Your Book Title</StyledHeader>  \n                <Datetime dateFormat={true} onChange={(evt)=> this.onDateChange(evt)} />\n               \n                <StyledSearch>\n                <SearchField \n                placeholder=\"Search\"\n                onChange={(value, evt) => this.onSearchChange(value, evt)}\n                onEnter={(value, evt) => this.onEnter(value, evt)}\n                />\n                {listOfBooks}\n                </StyledSearch>\n                <input onChange={(evt) => this.onInputChange(evt)} />\n                <button style={buttonStyles} onClick={() => this.submitAction()}>Submit</button>\n            </div>\n        )\n    }\n}\n\nconst buttonStyles = {\n    height: \"50px\",\n    width: \"200px\",\n    margin: \"30px\"\n}\n\nconst newTaskStyles = {\n    margin: \"0 auto\",\n    height: \"auto\",\n    width: \"90%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledToDoImage = styled.img`\n    height: auto;\n    width: 200px;\n`\n\nconst taskURL = \"https://todolist-sei32.herokuapp.com\";\n\nclass ToDoTask extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          doTask: {},\n          doURL: this.props.match.url\n        }\n        this.deleteDoTask = this.deleteDoTask.bind(this)\n        console.log(this.props.match)\n    }\n\n    deleteDoTask() {\n        fetch(taskURL + this.state.doURL, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\"\n            },\n        }).then(res => console.log(res))\n        .catch(err => console.log(err));\n    };\n    render() {\n        const toDoTask = this.state.doTask;\n        return (\n            <div>\n                <article>\n                    <StyledToDoImage src={toDoTask.image} alt={toDoTask.task}/>\n                    <section>\n                        <h2>{toDoTask.task}</h2>\n                        <li>{toDoTask.due}</li>\n                        <li>{toDoTask.url}</li>\n                    </section>\n                    <section>\n                        <Link to=\"/todo/id/:id/edit\">\n                        <button>Edit Task</button>\n                        </Link>\n                        <Link to=\"/\">\n                            <button onClick={this.deleteDoTask}>Delete Task</button>\n                        </Link>\n                    </section>\n                </article>\n            </div>\n        )\n    }\n}\n\nexport default ToDoTask","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledToDoImage = styled.img`\n    height: auto;\n    width: 200px;\n`\n\nconst taskUrl = \"https://todolist-sei32.herokuapp.com\";\n\nclass ToWatchTask extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          readTask: {},\n          readUrl: this.props.match.url\n        }\n        this.deleteDoTask = this.deleteDoTask.bind(this)\n        this.fetchReadTask = this.fetchReadTask.bind(this)\n        console.log(this.props.match)\n    }\n\n    componentDidMount() {\n        this.fetchReadTask();\n      }\n\n    fetchReadTask() {\n        fetch(taskUrl + this.state.readUrl, {\n            method: \"GET\",\n        })\n        .then( response => response.json()\n        .then( (parsedJson) => {\n          this.setState({\n            readTask: parsedJson\n          })\n        }\n        ))\n    }\n\n    deleteDoTask() {\n        fetch(taskUrl + this.state.readUrl, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\"\n            },\n        }).then(res => console.log(res))\n        .catch(err => console.log(err));\n    };\n    render() {\n        const toReadTask = this.state.readTask;\n        console.log(this.state.readTask)\n        return (\n            <div>\n                <article>\n                    <StyledToDoImage src={toReadTask.thumbnail} alt={toReadTask.title}/>\n                    <section>\n                        <h2>{toReadTask.title}</h2>\n                        <li>{toReadTask.due}</li>\n                    </section>\n                    <section>\n                        <button>Edit Task</button>\n                        <Link to=\"/\">\n                            <button onClick={this.deleteDoTask}>Delete Task</button>\n                        </Link>\n                    </section>\n                </article>\n            </div>\n        )\n    }\n}\n\nexport default ToWatchTask","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledToDoImage = styled.img`\n    height: auto;\n    width: 200px;\n`\n\nconst taskURL = \"https://todolist-sei32.herokuapp.com\";\n\n\n\nclass ToWatchTask extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          doTask: {},\n          doURL: this.props.match.url\n        }\n        this.deleteDoTask = this.deleteDoTask.bind(this)\n        console.log(this.props.match)\n    }\n\n    deleteDoTask() {\n        fetch(taskURL + this.state.doURL, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Connection\": \"keep-alive\",\n                \"Cache-Control\": \"no-cache\",\n                \"Accept\": \"*/*\"\n            },\n        }).then(res => console.log(res))\n        .catch(err => console.log(err));\n    };\n    render() {\n        const toDoTask = this.state.doTask;\n        return (\n            <div>\n                <article>\n                    <StyledToDoImage src={toDoTask.image} alt={toDoTask.task}/>\n                    <section>\n                        <h2>{toDoTask.task}</h2>\n                        <li>{toDoTask.due}</li>\n                        <li>{toDoTask.url}</li>\n                    </section>\n                    <section>\n                        <button>Edit Task</button>\n                        <Link to=\"/\">\n                            <button onClick={this.deleteDoTask}>Delete Task</button>\n                        </Link>\n                    </section>\n                </article>\n            </div>\n        )\n    }\n}\n\nexport default ToWatchTask","\nimport React, { Component } from 'react'\nimport TaskList from '../TasksList/TasksList'\nimport NewTaskMenu from '../NewTask/NewTaskMenu'\nimport NewDoTask from '../TaskComponents/ToDo/NewDoTask'\nimport NewWatchTask from '../TaskComponents/ToWatch/NewWatchTask'\nimport NewReadTask from '../TaskComponents/ToRead/NewReadTask'\nimport ToDoTask from \"../TaskComponents/ToDo/ToDoTask\"\nimport ToReadTask from \"../TaskComponents/ToRead/ToReadTask\"\nimport ToWatchTask from \"../TaskComponents/ToWatch/ToWatchTask\"\nimport { Route, Link } from 'react-router-dom'\nimport './App.css'\n\nlet Datetime = require('react-datetime')\n\n\nconst taskURL = \"https://todolist-sei32.herokuapp.com/\";\n// const taskURL = \"http://localhost:8081/\";\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      tasks: [],\n      dateAndTime: null,\n    }\n    this.onDateChange = this.onDateChange.bind(this)\n  }\n\n  onDateChange(evt){\n    let dateBuf = new Date(evt._d)\n    dateBuf = JSON.stringify(dateBuf)\n    dateBuf = dateBuf.slice(1,11)\n    \n    this.setState({\n        dateAndTime: dateBuf\n    })\n  }\n\n\n  componentDidUpdate(){\n    // fetchTasks() {\n    fetch(taskURL+\"index/\"+this.state.dateAndTime, {\n      method: \"GET\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      }\n    })\n      .then( response => response.json()\n      .then( (parsedJson) => {\n        console.log(parsedJson)\n      }))\n  }\n\n  \n\n  render () {\n    return (\n      <div>\n        <nav className=\"navbar\">\n        <Datetime className=\"dateTime\" dateFormat={true} onChange={(evt)=> this.onDateChange(evt)} />\n          <Link to=\"/\">\n            <h1 className=\"logo\">YouDue<span role=\"img\">\t&#x270F;&#xFE0F; </span></h1>\n          </Link>\n          <Link to=\"/NewTask/\">\n            <h4 className=\"createTask \">Create New Task</h4>\n          </Link>\n          <h2 className=\"motto\"> Getting things done, <i className=\"onTime\">on time.</i></h2>\n          <p className=\"pickDate blinking\"> Pick a Date</p>\n        </nav>\n        <section>\n          <Route \n            path=\"/\"\n            exact\n            render={props => <TaskList {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/NewTask/\"\n            exact\n            render={props => <NewTaskMenu {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/NewToDo/\"\n            exact\n            render={props => <NewDoTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/NewToWatch/\"\n            exact\n            render={props => <NewWatchTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/NewToRead/\"\n            exact\n            render={props => <NewReadTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/todo/id/:id\"\n            exact\n            render={props => <ToDoTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/toread/id/:id\"\n            exact\n            render={props => <ToReadTask {...props} {...this.state} />}\n          />\n          <Route\n            path=\"/towatch/id/:id\"\n            exact\n            render={props => <ToWatchTask {...props} {...this.state} />}\n          />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from '../src/components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n        <Router>\n            <style>\n@import url('https://fonts.googleapis.com/css?family=Righteous&display=swap');\n</style>\n\n            <App/>\n        </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}